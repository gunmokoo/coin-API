{"version":3,"sources":["api.ts","atoms.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","a","fetch","then","response","json","coinId","fetchCoinTickers","isDarkAtom","atom","key","default","Chart","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","isLoading","data","isDark","useRecoilValue","type","height","series","map","price","x","time_close","y","open","high","low","close","options","theme","mode","chart","background","title","text","align","xaxis","yaxis","show","Overview","styled","div","OverviewItem","Price","console","log","beta_value","first_data_at","last_updated","Container","Header","header","Title","h1","props","accentColor","Loader","span","Description","p","Tabs","Tab","isActive","textColor","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","refetchInterval","tickersLoading","tickersData","loading","Helmet","name","to","rank","symbol","quotes","USD","toFixed","description","total_supply","max_supply","path","CoinsList","ul","li","cardBgColor","Img","img","Coins","setDarkAtom","useSetRecoilState","onClick","prev","slice","coin","pathname","id","src","toLowerCase","Router","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.a6fb6a7f.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport async function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\nexport async function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\nexport async function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { atom } from \"recoil\";\n\nexport const isDarkAtom = atom({\n  key: \"isDark\",\n  default: false,\n});\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n}\n\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\n    fetchCoinHistory(coinId)\n  );\n  const isDark = useRecoilValue(isDarkAtom);\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          height={350}\n          series={[\n            {\n              data: data?.map((price) => ({\n                x: price.time_close,\n                y: [price.open, price.high, price.low, price.close],\n              })),\n            },\n          ]}\n          options={{\n            theme: { mode: isDark ? \"dark\" : \"light\" },\n            chart: {\n              type: \"candlestick\",\n              height: 350,\n              background: \"transparent\",\n            },\n            title: {\n              text: \"CandleStick Chart\",\n              align: \"left\",\n            },\n            xaxis: {\n              type: \"datetime\",\n            },\n            yaxis: {\n              show: false,\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport { fetchCoinTickers } from \"../api\";\nimport styled from \"styled-components\";\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\n\ninterface PriceProps {\n  coinId: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Price({ coinId }: PriceProps) {\n  const { data } = useQuery<PriceData>([\"tickers\", coinId], () =>\n    fetchCoinTickers(coinId)\n  );\n  console.log(data);\n  return (\n    <>\n      <Overview>\n        <OverviewItem>\n          <span>beta value:</span>\n          <span>{data?.beta_value}</span>\n        </OverviewItem>\n        <OverviewItem>\n          <span>first data at:</span>\n          <span>{data?.first_data_at}</span>\n        </OverviewItem>\n        <OverviewItem>\n          <span>last updated:</span>\n          <span>{data?.last_updated}</span>\n        </OverviewItem>\n      </Overview>\n    </>\n  );\n}\nexport default Price;\n","import { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  display: block;\n  text-align: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\n\ninterface RouteState {\n  name: string;\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Link to={\"/\"}>Fall back</Link>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes?.USD?.price?.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price coinId={coinId} />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Coin;\n","import styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoins } from \"../api\";\nimport { useSetRecoilState } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(props) => props.theme.textColor};\n  padding: 20px;\n  border-radius: 15px;\n  margin-bottom: 10px;\n  border: 1px solid white;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  display: block;\n  text-align: center;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\n  const toggleDarkAtom = () => setDarkAtom((prev) => !prev);\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n        <button onClick={toggleDarkAtom}>Toggle Mode</button>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\n\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"whitesmoke\",\n  textColor: \"black\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"white\",\n};\n","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ThemeProvider } from \"styled-components\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nfont-family: 'Source Sans Pro', sans-serif;\n  html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n*{\n  box-sizing: border-box;\n}\nbody{\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}